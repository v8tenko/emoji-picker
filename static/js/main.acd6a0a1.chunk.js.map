{"version":3,"sources":["utils/DataHelper.ts","app/hooks.ts","features/inputSlice.ts","features/pickerSlice.ts","components/EmojiInput/EmojiPicker/EmojiSection/EmojiSection.tsx","res/recent.svg","res/smile.svg","components/EmojiInput/EmojiPicker/EmojiPicker.tsx","components/AutoTextArea/AutoTextArea.tsx","components/EmojiInput/EmojiInput.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["DataHelper","query","id","this","idByEmojiMap","set","get","EMOJI_SIZE","COUNT_IN_ROW","PICKER_WIDTH","emojiCount","Map","useAppDispatch","useDispatch","useAppSelector","useSelector","inputSlice","createSlice","name","initialState","inputText","reducers","updateText","state","action","payload","pushEmoji","actions","selectInputText","input","mouseOut","createAsyncThunk","_","thunkAPI","a","dispatch","setHover","setTimeout","getState","picker","isHover","isWaiting","hidePicker","setWaiting","mouseOutPicker","pickerShown","mode","showPicker","setMode","initEmojiCount","forEach","idx","value","setEmojiId","increaseClickCount","m","index","getEmojisId","l","r","currentCount","temp","selectPickerShown","selectRecent","slice","filter","el","map","selectMode","EmojiSection","title","content","className","e","role","onClick","emoji","increase","document","querySelector","focus","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","fill","fillRule","clipRule","SvgRecent","_ref","svgRef","titleId","props","width","height","viewBox","xmlns","ref","ForwardRef","opacity","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgSmile","EmojiPicker","forwardRef","recent","useEffect","section","items","flat","style","AutoTextArea","smileRef","onChange","textAreaRef","useRef","useState","text","setText","textAreaHeight","setTextAreaHeight","parentHeight","setParentHeight","current","scrollHeight","minHeight","position","rows","overflow","event","EmojiInput","React","createRef","emojiPickerRef","smileNode","emojiPickerNode","show","setHoverTrue","mouseOutOfSmile","mouseOutOfPicker","clickCount","handleBindClick","addEventListener","window","removeEventListener","App","store","configureStore","reducer","inputReducer","pickerReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.acd6a0a1.chunk.js","sourcesContent":["export class DataHelper {\r\n    static EMOJI_SIZE = +process.env[\"REACT_APP_EMOJI_SIZE\"]!\r\n    static COUNT_IN_ROW = +process.env[\"REACT_APP_COUNT_IN_ROW\"]!\r\n    static PICKER_WIDTH = (DataHelper.EMOJI_SIZE + 1) * DataHelper.COUNT_IN_ROW * 2 // иконки + растояние между иконками\r\n\r\n    static emojiCount = 0\r\n    static idByEmojiMap = new Map<string, number>()\r\n\r\n    static setEmojiId(query: string, id: number) {\r\n        this.idByEmojiMap.set(query, id)\r\n    }\r\n\r\n    static getEmojisId(query: string): number {\r\n        return this.idByEmojiMap.get(query) ?? -1\r\n    }\r\n\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {RootState} from \"app/store\";\n\nexport interface InputState {\n    inputText: string,\n}\n\nconst initialState: InputState = {\n    inputText: \"\", // введенный текст\n};\n\n\nexport const inputSlice = createSlice({\n    name: 'input',\n    initialState,\n    reducers: {\n        updateText(state, action: PayloadAction<string>) {\n            state.inputText = action.payload\n        },\n        pushEmoji(state, action: PayloadAction<string>) {\n            state.inputText += action.payload\n        }\n    },\n});\n\nexport const {\n    updateText, pushEmoji,\n} = inputSlice.actions\n\nexport const selectInputText = (state: RootState) => state.input.inputText\n\nexport default inputSlice.reducer\n\n","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {RootState} from \"app/store\";\r\nimport {DataHelper} from \"../utils/DataHelper\";\r\n\r\nexport interface PickerState {\r\n    pickerShown: boolean,\r\n    isHover: boolean,\r\n    isWaiting: boolean,\r\n    mode: \"all\" | \"recent\",\r\n    emojiCount: [string, number][]\r\n}\r\n\r\nconst initialState: PickerState = {\r\n    pickerShown: false, // отображать пикер или нет\r\n    isHover: false, // курсор над пикером/смайликом\r\n    isWaiting: false, // ждем ли мы пока курсор вернеться к пикеру/смайлику\r\n    mode: \"all\", // текущие стикеры (все или популярные)\r\n    emojiCount: [] // число нажатий на каждый стикер\r\n};\r\n\r\nconst WAITING_TIME = 300\r\n\r\nexport const mouseOut = createAsyncThunk(\r\n    'picker /mouseOutEmoji',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setHover(false))\r\n        setTimeout(() => {\r\n            const {isHover, isWaiting} = (thunkAPI.getState() as RootState).picker\r\n            if (!isHover && !isWaiting) {\r\n                thunkAPI.dispatch(hidePicker())\r\n                thunkAPI.dispatch(setWaiting(false))\r\n            }\r\n        }, WAITING_TIME)\r\n    }\r\n)\r\n\r\nexport const mouseOutPicker = createAsyncThunk(\r\n    'picker/mouseOutPicker',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setHover(false))\r\n        setTimeout(() => {\r\n            const {isWaiting, isHover} = (thunkAPI.getState() as RootState).picker\r\n            if (!isWaiting && !isHover) {\r\n                thunkAPI.dispatch(hidePicker())\r\n            }\r\n        }, WAITING_TIME)\r\n    }\r\n)\r\n\r\nexport const inputSlice = createSlice({\r\n    name: 'picker',\r\n    initialState,\r\n    reducers: {\r\n        showPicker(state) {\r\n            state.pickerShown = true\r\n            state.isHover = true\r\n            state.isWaiting = false\r\n        },\r\n        hidePicker(state) {\r\n            state.pickerShown = false\r\n        },\r\n        setHover(state, action: PayloadAction<boolean>) {\r\n            state.isHover = action.payload\r\n        },\r\n        setWaiting(state, action: PayloadAction<boolean>) {\r\n            state.isWaiting = action.payload\r\n        },\r\n        setMode(state, action: PayloadAction<\"all\" | \"recent\">) {\r\n            state.mode = action.payload\r\n        },\r\n        initEmojiCount(state, action: PayloadAction<[string, number][]>) {\r\n            state.emojiCount = action.payload\r\n            action.payload.forEach(([value, _], idx) => {\r\n                DataHelper.setEmojiId(value, idx)\r\n            })\r\n        },\r\n        increaseClickCount(state, action: PayloadAction<string>) {\r\n            const index = DataHelper.getEmojisId(action.payload)\r\n            let l = -1\r\n            let r = index\r\n            const currentCount = state.emojiCount[r][1] + 1\r\n            let m: number\r\n            while (r - l !== 1) {\r\n                m = ~~((l + r) / 2)\r\n                if (state.emojiCount[m][1] >= currentCount) {\r\n                    l = m\r\n                } else {\r\n                    r = m\r\n                }\r\n            }\r\n            const temp: [string, number] = [action.payload, currentCount]\r\n            state.emojiCount[index] = state.emojiCount[r]\r\n            state.emojiCount[r] = temp\r\n            DataHelper.setEmojiId(state.emojiCount[index][0], index)\r\n            DataHelper.setEmojiId(state.emojiCount[r][0], r)\r\n        }\r\n    },\r\n});\r\n\r\n\r\nexport const {\r\n    showPicker, hidePicker, setHover, setWaiting, setMode, initEmojiCount, increaseClickCount\r\n} = inputSlice.actions\r\n\r\nexport const selectPickerShown = (state: RootState) => state.picker.pickerShown\r\nexport const selectRecent = (state: RootState) => state.picker.emojiCount\r\n    .slice(0, 25)\r\n    .filter(el => el[1] !== 0)\r\n    .map(el => el[0])\r\nexport const selectMode = (state: RootState) => state.picker.mode\r\nexport const selectAllCount = (state: RootState) => state.picker.emojiCount\r\n\r\nexport default inputSlice.reducer\r\n\r\n","import React, {FC} from \"react\";\r\nimport \"./EmojiSection.sass\"\r\nimport {useAppDispatch} from \"app/hooks\";\r\nimport {pushEmoji} from \"features/inputSlice\";\r\nimport {increaseClickCount} from \"../../../../features/pickerSlice\";\r\n\r\ninterface EmojiSectionProps {\r\n    title: string,\r\n    content: string[]\r\n}\r\n\r\nexport const EmojiSection: FC<EmojiSectionProps> = ( {title, content} ) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const push = (emoji: string) => dispatch(pushEmoji(emoji))\r\n    const increase = (emoji: string) => dispatch(increaseClickCount(emoji))\r\n    const focus = () => document.querySelector<HTMLTextAreaElement>(\".emoji-input-span\")!.focus()\r\n\r\n    return (\r\n        <section className=\"emoji-section\">\r\n            <p> {title} </p>\r\n            <div className=\"emoji-grid\">\r\n                {\r\n                    content.map(e => {\r\n                        return <span\r\n                            role=\"img\"\r\n                            key={e}\r\n                            onClick={() => {\r\n                                push(e)\r\n                                increase(e)\r\n                                focus()\r\n                            }}\r\n                        >\r\n                            {e}\r\n                        </span>\r\n                    })\r\n                }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.4 6.00001C10.4 5.50295 9.99706 5.10001 9.50001 5.10001C9.00295 5.10001 8.60001 5.50295 8.60001 6.00001V10.5C8.60001 10.8752 8.83272 11.211 9.184 11.3427L13.184 12.8427C13.6494 13.0172 14.1682 12.7814 14.3427 12.316C14.5172 11.8506 14.2814 11.3318 13.816 11.1573L10.4 9.87631V6.00001Z\",\n  fill: \"#99A2AD\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M10 0.100006C4.53239 0.100006 0.100006 4.53239 0.100006 10C0.100006 15.4676 4.53239 19.9 10 19.9C15.4676 19.9 19.9 15.4676 19.9 10C19.9 4.53239 15.4676 0.100006 10 0.100006ZM1.90001 10C1.90001 5.5265 5.5265 1.90001 10 1.90001C14.4735 1.90001 18.1 5.5265 18.1 10C18.1 14.4735 14.4735 18.1 10 18.1C5.5265 18.1 1.90001 14.4735 1.90001 10Z\",\n  fill: \"#99A2AD\"\n});\n\nfunction SvgRecent(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRecent);\nexport default __webpack_public_path__ + \"static/media/recent.b95ee132.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.4,\n  d: \"M0 0h24v24H0z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#828A99\",\n  fillRule: \"nonzero\",\n  d: \"M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12zm18.3 0a8.3 8.3 0 1 0-16.6 0 8.3 8.3 0 0 0 16.6 0zm-11.05-.5a1.25 1.25 0 1 1 0-2.5 1.25 1.25 0 0 1 0 2.5zm5.5 0a1.25 1.25 0 1 1 0-2.5 1.25 1.25 0 0 1 0 2.5z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#828A99\",\n  strokeWidth: 1.7,\n  d: \"M9 14.85c.833.767 1.833 1.15 3 1.15s2.167-.383 3-1.15\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}));\n\nfunction SvgSmile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSmile);\nexport default __webpack_public_path__ + \"static/media/smile.baf5d03b.svg\";\nexport { ForwardRef as ReactComponent };","import React, {forwardRef, useEffect} from 'react'\r\nimport './EmojiPicker.sass'\r\nimport section from 'res/sections.json'\r\nimport {DataHelper} from \"utils/DataHelper\";\r\nimport {EmojiSection} from \"./EmojiSection/EmojiSection\";\r\nimport {useAppDispatch, useAppSelector} from \"app/hooks\";\r\nimport {\r\n    selectMode,\r\n    selectPickerShown,\r\n    setMode,\r\n    selectRecent, initEmojiCount,\r\n} from \"features/pickerSlice\";\r\nimport {ReactComponent as Recent} from \"res/recent.svg\"\r\nimport {ReactComponent as Smile} from \"res/smile.svg\"\r\n\r\n\r\nexport const EmojiPicker = forwardRef<HTMLDivElement>((_, ref) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const pickerShown = useAppSelector(selectPickerShown)\r\n    const mode = useAppSelector(selectMode)\r\n    const recent = useAppSelector(selectRecent)\r\n    const modeAll = () => dispatch(setMode(\"all\"))\r\n    const modeRecent = () => dispatch(setMode(\"recent\"))\r\n\r\n    useEffect(() => {\r\n        dispatch(initEmojiCount(section.map(el => el.items).flat().map(el => [el, 0])))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div\r\n            className={`emoji-container${!pickerShown ? ' hidden' : ''}`}\r\n            ref={ref}\r\n        >\r\n            <div\r\n                className={`emoji-picker`}\r\n                style={{\r\n                    width: DataHelper.PICKER_WIDTH\r\n                }}\r\n            >\r\n                {\r\n                    mode === \"all\"\r\n                        ? section.map(el => {\r\n                            return <EmojiSection\r\n                                key={el.title}\r\n                                title={el.title}\r\n                                content={el.items}\r\n                            />\r\n                        })\r\n                        : <EmojiSection title=\"Недавние\" content={recent} />\r\n                }\r\n            </div>\r\n            <div className={`emoji-last ${mode}`}>\r\n                <Smile\r\n                    className=\"smile-last\"\r\n                    onClick={modeAll}\r\n                />\r\n                <Recent\r\n                    className=\"recent-last\"\r\n                    onClick={modeRecent}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React, {CSSProperties, forwardRef, useEffect, useRef, useState} from 'react'\r\nimport {ReactComponent as Smile} from \"../../res/smile.svg\";\r\n\r\nexport interface AutoTextAreaProps {\r\n    onChange?: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,\r\n    style?: CSSProperties,\r\n    className?: string,\r\n    content?: string\r\n}\r\n\r\n\r\nexport const AutoTextArea\r\n    = forwardRef<SVGSVGElement, AutoTextAreaProps>((\r\n    {style, onChange, className, content}: AutoTextAreaProps,\r\n    smileRef\r\n) => {\r\n    const textAreaRef = useRef<HTMLTextAreaElement>(null)\r\n    const [text, setText] = useState(\"\")\r\n    const [textAreaHeight, setTextAreaHeight] = useState(\"auto\")\r\n    const [parentHeight, setParentHeight] = useState(\"auto\")\r\n\r\n    useEffect(() => {\r\n        setParentHeight(`${textAreaRef.current!.scrollHeight}px`)\r\n        setTextAreaHeight(`${textAreaRef.current!.scrollHeight}px`)\r\n    }, [text])\r\n\r\n    const onChangeHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setTextAreaHeight(\"auto\")\r\n        setParentHeight(`${textAreaRef.current!.scrollHeight}px`)\r\n        setText(event.target.value)\r\n        onChange?.call(null, event)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                minHeight: parentHeight,\r\n                position: \"relative\"\r\n            }}\r\n        >\r\n\t\t\t<textarea\r\n                ref={textAreaRef}\r\n                rows={1}\r\n                className={`${className} auto-textarea`}\r\n                value={content ?? text}\r\n                style={{\r\n                    height: textAreaHeight,\r\n                    overflow: \"hidden\",\r\n                    ...style\r\n                }}\r\n                onChange={onChangeHandler}\r\n            />\r\n            <Smile\r\n                className=\"emoji-input-smile\"\r\n                ref={smileRef}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import React, {FC, useEffect} from \"react\";\r\nimport \"./EmojiInput.sass\"\r\nimport {EmojiPicker} from \"./EmojiPicker/EmojiPicker\";\r\nimport {DataHelper} from \"utils/DataHelper\";\r\nimport {useAppDispatch, useAppSelector} from \"app/hooks\";\r\n    import {AutoTextArea} from \"../AutoTextArea/AutoTextArea\";\r\nimport {\r\n    showPicker, setHover, mouseOut, mouseOutPicker, hidePicker\r\n} from \"features/pickerSlice\";\r\nimport {\r\n    selectInputText, updateText\r\n} from \"features/inputSlice\";\r\n\r\nexport const EmojiInput: FC = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const inputText = useAppSelector(selectInputText)\r\n    const updateInputText =\r\n        (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n            dispatch(updateText(event.target.value))\r\n        }\r\n\r\n    const smileRef = React.createRef<SVGSVGElement>()\r\n    const emojiPickerRef = React.createRef<HTMLDivElement>()\r\n\r\n    // делаем ссылки\r\n    useEffect(() => {\r\n        const smileNode = smileRef.current\r\n        const emojiPickerNode = emojiPickerRef.current\r\n\r\n        const show = () => dispatch(showPicker())\r\n        const hide = () => dispatch(hidePicker())\r\n        const setHoverTrue = () => dispatch(setHover(true))\r\n        const mouseOutOfSmile = () => dispatch(mouseOut())\r\n        const mouseOutOfPicker = () => dispatch(mouseOutPicker())\r\n\r\n        let clickCount = 0\r\n        const handleBindClick = (event: KeyboardEvent) => {\r\n            if (event.key !== \"Tab\") {\r\n                return\r\n            }\r\n            if (clickCount % 2 === 0) {\r\n                show()\r\n            } else {\r\n                hide()\r\n            }\r\n            clickCount++\r\n        }\r\n\r\n        smileNode?.addEventListener('mouseenter', show)\r\n        smileNode?.addEventListener('mouseleave', mouseOutOfSmile)\r\n        emojiPickerNode?.addEventListener('mouseenter', setHoverTrue)\r\n        emojiPickerNode?.addEventListener('mouseleave', mouseOutOfPicker)\r\n        window.addEventListener('keydown', handleBindClick)\r\n\r\n        return () => {\r\n            smileNode?.removeEventListener('mouseenter', show)\r\n            smileNode?.removeEventListener('mouseleave', mouseOutOfSmile)\r\n            emojiPickerNode?.removeEventListener('mouseenter', setHoverTrue)\r\n            emojiPickerNode?.removeEventListener('mouseleave', mouseOutOfPicker);\r\n            window.addEventListener('keydown', handleBindClick)\r\n        }\r\n    }, [dispatch, emojiPickerRef, smileRef])\r\n\r\n    return (\r\n        <form\r\n            action=\"\"\r\n            className=\"emoji-form\"\r\n        >\r\n            <EmojiPicker ref={emojiPickerRef}/>\r\n            <AutoTextArea\r\n                onChange={updateInputText}\r\n                className=\"emoji-input-span\"\r\n                content={inputText}\r\n                ref={smileRef}\r\n                style={{\r\n                    width: DataHelper.PICKER_WIDTH\r\n                }}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {EmojiInput} from \"./components/EmojiInput/EmojiInput\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <EmojiInput />\n        </div>\n    );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport inputReducer from 'features/inputSlice';\nimport pickerReducer from 'features/pickerSlice';\n\nexport const store = configureStore({\n  reducer: {\n    input: inputReducer,\n      picker: pickerReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}